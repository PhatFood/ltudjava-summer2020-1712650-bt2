package view;

import model.dao.BangDiemDAO;
import model.dao.LopHoc_MonHocDAO;
import model.enteties.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Set;
import java.util.Vector;

public class SinhVienMenu extends JFrame implements ActionListener {
    private JPanel rootPanel;
    private JComboBox comboBox1;
    private JTable table1;
    private JButton xemButton;
    private JButton dangXuatButton;
    private JButton doiMatKhauButton;

    private Object[][] cacLop = new Object[][]{};
    private String[] header = new String[]{"Tên lớp", "Điểm giữa kỳ", "Điểm cuối kỳ", "Điểm khác", "Điểm tổng"};

    Set<SinhVien_HocLop_Mon> sinhVien_hocLop_mons;

    public SinhVienMenu() {
        add(rootPanel);
        setTitle("Sinh viên menu");
        setSize(900, 500);
        table1.setModel(new DefaultTableModel((Object[][]) cacLop, header));

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public void addDoiMatKhauButtonListener(ActionListener listener) {
        doiMatKhauButton.addActionListener(listener);
    }

    public void addDangXuatButtonListener(ActionListener listener)
    {
        dangXuatButton.addActionListener(listener);
    }

    public void addXemBangDiemButtonListener(ActionListener listener) {
        xemButton.addActionListener(listener);
    }

    @Override
    public void actionPerformed(ActionEvent e) {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Lop");
        rootPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        rootPanel.add(comboBox1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1 = new JTable();
        scrollPane1.setViewportView(table1);
        xemButton = new JButton();
        xemButton.setText("Xem");
        rootPanel.add(xemButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dangXuatButton = new JButton();
        dangXuatButton.setText("DangXuat");
        rootPanel.add(dangXuatButton, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        doiMatKhauButton = new JButton();
        doiMatKhauButton.setText("DoiMatKhau");
        rootPanel.add(doiMatKhauButton, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    public void setLopMonCbb(Set<SinhVien_HocLop_Mon> sinhVien_hocLop_mons) {
        this.sinhVien_hocLop_mons = sinhVien_hocLop_mons;

        Vector lopCombobox = new Vector();
        lopCombobox.add("--Chọn lớp--");
        for (SinhVien_HocLop_Mon sinhVien_hocLop_mon : sinhVien_hocLop_mons) {
            lopCombobox.add(sinhVien_hocLop_mon.getLopHoc_monHoc().getMaLopHoc_MonHoc());
        }
        DefaultComboBoxModel lopsModel = new DefaultComboBoxModel(lopCombobox);
        comboBox1.setModel(lopsModel);
        comboBox1.setSelectedIndex(0);
        comboBox1.setEnabled(true);
    }

    public void xemBangDiem() {

        Object blankObject[][] = new Object[][]{};
        if (comboBox1.getSelectedIndex() != 0) {

            int posLop;
            posLop = comboBox1.getSelectedIndex();

            int i = 1;
            cacLop = new Object[1][5];
            for (SinhVien_HocLop_Mon sinhVien_hocLop_mon : sinhVien_hocLop_mons) {
                if (i == posLop) {
                    BangDiem bangDiem = sinhVien_hocLop_mon.getBangDiem();
                    cacLop[0][0] = sinhVien_hocLop_mon.getLopHoc_monHoc().getMonHoc().getTenMon();
                    cacLop[0][1] = bangDiem.getDiemGiuaKy();
                    cacLop[0][2] = bangDiem.getDiemCuoiKy();
                    cacLop[0][3] = bangDiem.getDiemKhac();
                    cacLop[0][4] = bangDiem.getDiemTong();
                }
                table1.setModel(new DefaultTableModel(cacLop, header));
            }

        } else
            table1.setModel(new DefaultTableModel((Object[][]) blankObject, header));

    }

    public String layMatKhauMoi() {
        setAlwaysOnTop(false);

        DoiMatKhauDialog view = new DoiMatKhauDialog();
        view.setSize(400, 200);
        view.setLocationRelativeTo(null);
        view.show();

        setAlwaysOnTop(true);
        return view.getMatKhauQuaDialog();
    }
}
