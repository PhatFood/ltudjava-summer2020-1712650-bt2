package view;

import model.enteties.Lop;
import model.enteties.LopHoc_MonHoc;
import model.enteties.MonHoc;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Set;
import java.util.Vector;

public class TKBView extends JFrame implements ActionListener {
    private JComboBox comboBox1;
    private JTable table1;
    private JButton xemButton;
    private JPanel rootPanel;

    private Object[][] monHocs = new Object[][]{};
    private String[] header = new String[]{"STT", "Mã môn", "Tên môn", "Phòng học"};

    List<Lop> lopsData;

    public TKBView() {
        add(rootPanel);
        setTitle("Bảng điểm");
        setSize(900, 600);
        table1.setModel(new DefaultTableModel((Object[][]) monHocs, header));

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public void addXemButtonListener(ActionListener listener) {
        xemButton.addActionListener(listener);
    }

    public void showCombobox(List<Lop> lopList) {
        lopsData = lopList;

        Vector lopCombobox = new Vector();
        lopCombobox.add("--Chọn lớp--");
        for (Lop lop : lopList) {
            lopCombobox.add(lop.getMalop());
        }
        DefaultComboBoxModel lopsModel = new DefaultComboBoxModel(lopCombobox);
        comboBox1.setModel(lopsModel);
        comboBox1.setSelectedIndex(0);
        comboBox1.setEnabled(true);
    }

    public void xemTKB() {
        int index = comboBox1.getSelectedIndex();
        if (index != 0) {
            Lop lop = lopsData.get(index - 1);
            Set<LopHoc_MonHoc> lopHoc_monHocSet = lop.getLopHoc_monHocs();
            int size = lopHoc_monHocSet.size();
            monHocs = new Object[size][4];
            int i = 0, j = 1;
            for (LopHoc_MonHoc lopHoc_monHoc : lopHoc_monHocSet) {
                MonHoc monHoc = lopHoc_monHoc.getMonHoc();
                monHocs[i][1] = monHoc.getMaMon();
                monHocs[i][2] = monHoc.getTenMon();
                monHocs[i][3] = lopHoc_monHoc.getPhongHoc();
                monHocs[i][0] = j;
                j++;
                i++;
            }
            table1.setModel(new DefaultTableModel(monHocs, header));
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Lop");
        rootPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        rootPanel.add(comboBox1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        xemButton = new JButton();
        xemButton.setText("Xem");
        rootPanel.add(xemButton, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1 = new JTable();
        scrollPane1.setViewportView(table1);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    @Override
    public void actionPerformed(ActionEvent e) {

    }
}
